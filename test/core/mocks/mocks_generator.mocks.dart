// Mocks generated by Mockito 5.4.6 from annotations
// in persistent_storage_key_value/test/core/mocks/mocks_generator.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:persistent_storage_key_value/core/utils/result.dart' as _i4;
import 'package:persistent_storage_key_value/features/theme/domain/entities/theme_entity.dart'
    as _i5;
import 'package:persistent_storage_key_value/features/theme/domain/repos/theme_repo.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ThemeRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeRepo extends _i1.Mock implements _i2.ThemeRepo {
  @override
  _i3.Future<_i4.Result<void>> setThemeMode(_i5.AppThemeMode? themeMode) =>
      (super.noSuchMethod(
            Invocation.method(#setThemeMode, [themeMode]),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#setThemeMode, [themeMode]),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#setThemeMode, [themeMode]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<_i5.AppThemeMode>> getThemeMode() =>
      (super.noSuchMethod(
            Invocation.method(#getThemeMode, []),
            returnValue: _i3.Future<_i4.Result<_i5.AppThemeMode>>.value(
              _i6.dummyValue<_i4.Result<_i5.AppThemeMode>>(
                this,
                Invocation.method(#getThemeMode, []),
              ),
            ),
            returnValueForMissingStub:
                _i3.Future<_i4.Result<_i5.AppThemeMode>>.value(
                  _i6.dummyValue<_i4.Result<_i5.AppThemeMode>>(
                    this,
                    Invocation.method(#getThemeMode, []),
                  ),
                ),
          )
          as _i3.Future<_i4.Result<_i5.AppThemeMode>>);
}
